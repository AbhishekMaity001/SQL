DROP TABLE IF EXISTS PROGMR;
DROP TABLE IF EXISTS SOFTWARE;
DROP TABLE IF EXISTS STUDIES;

CREATE TABLE PROGMR(
NAME VARCHAR(8) NOT NULL,
DOB DATE NOT NULL,
DOJ DATE NOT NULL,
SEX VARCHAR(1) NOT NULL,
PROF1 VARCHAR(8) NOT NULL,
PROF2 VARCHAR(8),
SAL DECIMAL(4,0),
CHECK (SAL > 0 OR SAL IS NULL),
PRIMARY KEY (NAME, DOB, DOJ)
);

CREATE TABLE SOFTWARE (
NAME VARCHAR(8) NOT NULL,
TITLE VARCHAR(20) NOT NULL,
DEV_IN VARCHAR(8) NOT NULL,
SCOST DECIMAL(5,0), 
DCOST DECIMAL(5,0),
SOLD INTEGER,
PRIMARY KEY (NAME, TITLE),
CONSTRAINT CHK_SCOST CHECK (SCOST>0 OR SOLD>0)
);

CREATE TABLE STUDIES(
NAME VARCHAR(8),
SPLACE VARCHAR(9),
COURSE VARCHAR(5),
CCOST NUMERIC(5),
PRIMARY KEY (NAME, COURSE),
CONSTRAINT CHK_CCOST CHECK (CCOST>0)
); 


TRUNCATE TABLE PROGMR;
--RECORDS INSERTION IN PROGMR TABLE
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('ANAND', '30-APR-1966', '21-APR-1992', 'M', 'PASCAL', 'BASIC', 3200);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('ALTAF', '02-JUL-1964', '13-NOV-1990', 'M', 'CLIPPER', 'COBOL', 2800);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('JAGADESH', '06-OCT-1970', '04-OCT-1994', 'M', 'ORACLE', 'JAVA', 4100);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('JULIANA', '31-JAN-1968', '21-APR-1990', 'F', 'COBOL', 'DBASE', 3000);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('KAMALA', '30-OCT-1968', '02-JAN-1992', 'F', 'C', 'DBASE', 2900);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('MARY', '24-JUN-1970', '01-FEB-1991', 'F', 'C++', 'ORACLE', 4500);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('NELSON', '11-SEP-1965', '11-OCT-1989', 'M', 'COBOL', 'DBASE', 2500);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('PATRIC', '19-NOV-1965', '11-OCT-1989', 'M', 'PASCAL', 'CLIPPER', 2800);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('QADIR', '31-AUG-1965', '21-APR-1993', 'M', 'ASSEMBLY', 'C', 3000);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('RAMESH', '03-MAY-1967', '28-FEB-1991', 'M', 'PASCAL', 'DBASE', 3200);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('REBECCA', '01-JAN-1967', '01-DEC-1990', 'F', 'BASIC', 'COBOL', 2500);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('REMITHA', '26-APR-1970', '20-APR-1993', 'F', 'C', 'ASSEMBLY', 3600);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('REVATHI', '02-DEC-1969', '02-JAN-1992', 'F', 'PASCAL', 'BASIC', 3700);
INSERT INTO PROGMR (NAME, DOB, DOJ, SEX, PROF1, PROF2, SAL) VALUES ('VIJAYA', '14-DEC-1965', '02-APR-1992', 'F', 'FOXPRO', 'C', 3500);
SELECT * FROM PROGMR;


  


TRUNCATE TABLE SOFTWARE;
--RECORDS INSERTION IN SOFTWARE TABLE
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('ANAND', 'PARACHUTES', 'BASIC', 400, 6000, 43);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('ANAND', 'VIDEO TITLING PACK', 'PASCAL', 7500, 16000, 9);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('JAGADESH', 'SERIAL LINK UTILITY', 'JAVA', 800, 7500, 10);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('JAGADESH', 'SHARES MANAGEMENT', 'ORACLE', 3000, 12000, 14);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('JULIANA', 'INVENTORY CONTROL', 'COBOL', 3000, 3500, 0);  -- check constraint
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('KAMALA', 'PAYROLL PACKAGE', 'DBASE', 9000, 20000, 7);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('MARY', 'FINANCILA ACC S/W', 'ORACLE', 18000, 85000, 4);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('MARY', 'CODE GENERATOR', 'C', 4500, 20000, 23);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('MARY', 'READ ME ', 'C++', 300, 1200, 84);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('PATRICK', 'GRAPHIC EDITOR', 'PASCAL', 750, 5000, 11);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('QADIR', 'BOMBS AWAY', 'ASSEMBLY', 500, 530, 114);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('QADIR', 'VACCINES', 'C', 1900, 3400, 21);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('RAMESH', 'HOTEL MANAGEMENT', 'DBASE', 12000, 35000, 4);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('RAMESH', 'DEAD LEE', 'PASCAL', 100, 4500, 73);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('REMITHA', 'PC UTILITIES', 'C', 725, 5000, 51);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('REMITHA', 'TSR HELP PACKAGE', 'ASSEMBLY', 2500, 6000, 6);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('REVATHI', 'HOTEL MANAGEMENT', 'PASCAL', 1100, 75000, 2);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('REVATHI', 'QUIZ MASTER', 'BASIC', 3200, 2100, 15);
INSERT INTO SOFTWARE (NAME, TITLE, DEV_IN, SCOST, DCOST, SOLD) VALUES ('VIJAYA', 'ISK EDITOR', 'C', 900, 700, 6);
SELECT * FROM SOFTWARE;






TRUNCATE TABLE STUDIES;
--RECORDS INSERTION IN STUDIES TABLE
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('ANAND', 'SABHARI', 'PGDCA', 4500);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('ALTAF', 'CCIT', 'DCA', 7200);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('JAGADESH', 'S.S.I.L', 'DCA', 3500);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('JULIANA', 'BITS', 'DCA', 22000);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('KAMALA', 'PRAGATHI', 'DCP', 5000);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('MARY', 'SABHARI', 'DCP', 5000);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('NELSON', 'PRAGATHI', 'DAP', 6200);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('QADIR', 'APPLE', 'HDCP', 14000);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('RAMESH', 'SABHARI', 'PGDCA', 4500);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('REBECCA', 'BRILLIANT', 'DCA', 11000);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('REMITHA', 'BDPS', 'DCS', 6000);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('REVATHI', 'SABHARI', 'DAP', 5000);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('VIJAYA', 'BDPS', 'DCA', 48000);
INSERT INTO STUDIES (NAME, SPLACE, COURSE, CCOST)  VALUES ('PATRICK', 'PRAGATHI', 'DCAP', 5200);
SELECT * FROM STUDIES;

SELECT * FROM PROGMR;
SELECT * FROM SOFTWARE;
SELECT * FROM STUDIES;
-------------------------------------------------------------------------------------


--3
SELECT AVG(SCOST) AS "AVERAGE SCOST" FROM SOFTWARE WHERE DEV_IN = 'PASCAL';


--4
SELECT NAME, AGE(current_date, dob) FROM PROGMR;  -- SELECT current_timestamp, current_date, current_time, age(date1, date2), now() 

--5
SELECT NAME from STUDIES WHERE COURSE='DAP';

--6
SELECT TITLE, SUM(SOLD) AS TOTAL_COPIES_SOLD FROM SOFTWARE
GROUP BY TITLE
ORDER BY TOTAL_COPIES_SOLD DESC LIMIT 1

--7
SELECT NAME, DOB, EXTRACT(MONTH FROM DOB) AS MNTH FROM PROGMR
WHERE EXTRACT(MONTH FROM DOB) =1;

--8
SELECT COURSE, CCOST FROM STUDIES
ORDER BY CCOST ASC LIMIT 1;

--9
SELECT COUNT(*) AS TOTAL FROM STUDIES
WHERE COURSE = 'PGDCA';

--10
SELECT SUM(SCOST) AS TOTAL_REVENUE FROM SOFTWARE
WHERE DEV_IN = 'C'

--11
SELECT * FROM SOFTWARE 
WHERE NAME = 'RAMESH'

--12
SELECT COUNT(*) AS TOTAL_SABHARI FROM STUDIES 
WHERE SPLACE = 'SABHARI'

--13
SELECT TITLE,  SUM(SCOST*SOLD) FROM SOFTWARE
GROUP BY TITLE
HAVING SUM(SCOST*SOLD)  > 20000

--14
SELECT TITLE, CEIL(DCOST/SCOST) AS NUMBER_OF_COPIES FROM SOFTWARE;

--15
SELECT TITLE, SCOST, DCOST, CEIL(DCOST/SCOST) AS COPIES_SOLD_REQUIRED, SOLD
FROM SOFTWARE
WHERE CEIL(DCOST/SCOST) <= SOLD

--16
SELECT TITLE, DEV_IN, DCOST FROM SOFTWARE
WHERE DEV_IN = 'BASIC' 
ORDER BY DCOST DESC LIMIT 1;

--17
SELECT COUNT(*) AS TOTAL_DBASE_SOFT FROM SOFTWARE WHERE DEV_IN = 'DBASE';

--18
SELECT COUNT(*) AS TOTAL_PRAGATHI_PROG FROM STUDIES 
WHERE SPLACE = 'PRAGATHI'

--19
SELECT * FROM STUDIES
WHERE CCOST BETWEEN 5000 AND 10000

--20
SELECT COURSE, ROUND(AVG(CCOST),2) AS AVERAGE_COST FROM STUDIES
GROUP BY COURSE

--21
SELECT * FROM PROGMR
WHERE PROF1='C' OR PROF2='C'

--22
SELECT * FROM PROGMR
WHERE PROF1 IN ('COBOL', 'PASCAL') OR PROF2 IN ('COBOL', 'PASCAL');

--23
SELECT * FROM PROGMR
WHERE PROF1 NOT IN ('C', 'PASCAL') AND PROF2 NOT IN ('C', 'PASCAL');

--24
SELECT NAME, AGE(CURRENT_DATE, DOB) FROM PROGMR 
WHERE AGE(CURRENT_DATE, DOB) = (SELECT MAX(AGE(CURRENT_DATE, DOB)) FROM PROGMR) 

--25
SELECT AVG(AGE(CURRENT_DATE, DOB)) AS AVERAGE_AGE FROM PROGMR
WHERE SEX = 'F'

--26
SELECT NAME, EXTRACT(YEAR FROM AGE(CURRENT_DATE, DOJ)) AS EXPERIENCE FROM PROGMR
ORDER BY EXPERIENCE DESC;

--27
SELECT NAME, EXTRACT(MONTH FROM DOB) AS DOB_MONTH FROM PROGMR
WHERE EXTRACT(MONTH FROM DOB) = EXTRACT(MONTH FROM NOW())

--28
SELECT COUNT(*) AS TOTAL_FEMALE FROM PROGMR
WHERE SEX = 'F';

--29
SELECT DISTINCT ON (PROF1, PROF2) PROF1, PROF2, SEX, NAME FROM PROGMR
WHERE SEX='M';

--30
SELECT AVG(SAL) AS AVERAGE_SALARY FROM PROGMR;

--31
SELECT COUNT(*) AS TOTAL_DRAW FROM PROGMR WHERE SAL BETWEEN 2000 AND 4000

--32
SELECT * FROM PROGMR
WHERE PROF1 NOT IN ('CLIPPER', 'COBOL', 'PASCAL') AND PROF2 NOT IN ('CLIPPER', 'COBOL', 'PASCAL');

--33
SELECT COUNT(*)  FROM PROGMR -- *,AGE(CURRENT_DATE, DOB)
WHERE SEX='F' AND EXTRACT(YEAR FROM AGE(CURRENT_DATE, DOB)) > 24 AND (PROF1 = 'C' OR PROF2='C')

--34
SELECT * , (EXTRACT(WEEK FROM DOB)-EXTRACT(WEEK FROM NOW())) FROM PROGMR
WHERE (EXTRACT(WEEK FROM DOB)-EXTRACT(WEEK FROM NOW())) = 0;

--35
SELECT EXTRACT(YEAR FROM AGE(CURRENT_DATE, DOJ))  AS YRS_OF_EXP FROM PROGMR
WHERE EXTRACT(YEAR FROM AGE(CURRENT_DATE, DOJ)) < 1

--36
SELECT *, EXTRACT(YEAR FROM AGE(CURRENT_DATE, DOJ)) AS YRS_EXP FROM PROGMR
WHERE EXTRACT(YEAR FROM AGE(CURRENT_DATE, DOJ)) + 1 = 2

--37
SELECT *, DCOST-(SCOST*SOLD) AS REMAINING_RECOVERY_COST FROM SOFTWARE
WHERE SCOST*SOLD < DCOST
;

--38
SELECT * FROM SOFTWARE WHERE SOLD=0;

--39
SELECT NAME, SUM(DCOST) FROM SOFTWARE WHERE NAME='MARY' GROUP BY NAME

--40
SELECT DISTINCT(SPLACE) FROM STUDIES;

--41
SELECT COUNT(DISTINCT(COURSE)) FROM STUDIES

--42
SELECT NAME FROM PROGMR
WHERE LENGTH(NAME)-LENGTH(REPLACE(NAME, 'A', ''))/LENGTH('A') >=2

--43
SELECT NAME, LENGTH(NAME) FROM PROGMR 
WHERE LENGTH(NAME)<=5

--44
SELECT *, EXTRACT(YEAR FROM AGE(NOW(),DOJ)) AS YEARS_OF_EXPERIENCE FROM PROGMR
WHERE SEX = 'F' AND EXTRACT(YEAR FROM AGE(NOW(),DOJ)) > 2
AND PROF1 = 'COBOL' OR PROF2 = 'COBOL'

--45
SELECT NAME, LENGTH(NAME) FROM PROGMR
WHERE LENGTH(NAME) = (SELECT MIN(LENGTH(NAME)) FROM PROGMR) 

--46
SELECT DEV_IN, AVG(DCOST) FROM SOFTWARE
GROUP BY DEV_IN
HAVING AVG(DCOST) = (SELECT AVG(DCOST) FROM SOFTWARE WHERE DEV_IN = 'COBOL' GROUP BY DEV_IN)

--47
SELECT P.NAME, EXTRACT(DAY FROM P.DOB) AS DAY, EXTRACT(MONTH FROM P.DOB) AS MONTH, EXTRACT(YEAR FROM P.DOB) AS YEAR, P.SEX, 
CONCAT(EXTRACT(DAY FROM P.DOB), '/', EXTRACT(MONTH FROM P.DOB), '/', EXTRACT(YEAR FROM P.DOB))
FROM STUDIES AS S
RIGHT JOIN PROGMR AS P
ON S.NAME = P.NAME

--48
SELECT * FROM PROGMR
WHERE PROF1 NOT LIKE 'COBOL' AND PROF2 NOT LIKE 'COBOL' AND SEX = 'M'

--49
SELECT NAME, DOB FROM PROGMR

SELECT (date_trunc('month', SELECT DOB FROM PROGMR) + interval '1 month' - interval '1 day')::date
AS end_of_month;



SELECT EXTRACT(YEAR FROM AGE(NOW()))
select INTERVAL '1 YEAR'

SELECT * FROM PROGMR;
SELECT * FROM SOFTWARE;
SELECT * FROM STUDIES;

-- FINDING THE UNIQUE RECORDS
SELECT NAME, COUNT(*) from STUDIES
GROUP BY NAME
HAVING COUNT(*)=1
;

-- EXTRACT MONTH 
SELECT EXTRACT(MONTH FROM NOW())
